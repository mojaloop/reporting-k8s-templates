{{- if .Values.templates.transactionDetail -}}

apiVersion: mojaloop.io/v1
kind: MojaloopReport
metadata:
  name: {{ printf "%s-%s" .Release.Name "report-transaction-detail" | trimPrefix "-" }}
  {{ include "common.annotations" . | nindent 2 }}
spec:
  endpoint:
    params:
      - name: transferId
        required: true
    path: /report-transaction-detail
  permission: transferApi
  queries:
    - name: transfers
      query: >
        select
        	qp1.fspId as endPayerFsp,
          payerpit.name as payerIdentifierTypeName,
        	qp1.partyIdentifierValue as payerIdentifierValue,
          qp1.partyName as payerName,
        	qp2.fspId as endPayeeFsp,
          payeepit.name as payeeIdentifierTypeName,
        	qp2.partyIdentifierValue as payeeIdentifierValue,
          qp2.partyName as payeeName,
          q.quoteId as quoteId,
          q.transactionReferenceId as transactionReferenceId,
          fqct.conversionId as conversionId,
          fqct.expirationDate as conversionExpiry,
          ft.commitRequestId as commitRequestId,
          transfer.expirationDate as transferExpiry,
          qr.payeeFspFeeAmount as payeeFspFeeAmount,
          qr.payeeFspCommissionAmount as payeeFspCommissionAmount,
          fqrct.sourceAmount as conversionTermsSourceAmount,
          fqrct.targetAmount as conversionTermsTargetAmount,
          fxtsc.transferStateId as fxTransferState,
            `transfer`.*,
            ft.*,
            `transfer`.`currencyId` as `currency`,
            `tp1`.`amount` as `payerAmount`,
            `da`.`participantId` as `payerParticipantId`,
            `da`.`name` as `payerFsp`,
            `tp2`.`amount` as `payeeAmount`,
            `ca`.`participantId` as `payeeParticipantId`,
            `ca`.`name` as `payeeFsp`,
            `fda`.`name` as `fxpName`,
            `tsc`.`transferStateId` as `transferState`,
            `tsc`.`reason` as `reason`,
            `tsc`.`createdDate` as `completedTimestamp`
        from
            `transfer`
        inner join `transferParticipant` as `tp1` on
            `tp1`.`transferId` = `transfer`.`transferId`
        inner join `transferParticipantRoleType` as `tprt1` on
            `tprt1`.`transferParticipantRoleTypeId` = `tp1`.`transferParticipantRoleTypeId`
        inner join `participant` as `da` on
            `da`.`participantId` = `tp1`.`participantId`
        inner join `transferParticipant` as `tp2` on
            `tp2`.`transferId` = `transfer`.`transferId`
        inner join `transferParticipantRoleType` as `tprt2` on
            `tprt2`.`transferParticipantRoleTypeId` = `tp2`.`transferParticipantRoleTypeId`
        inner join `participant` as `ca` on
            `ca`.`participantId` = `tp2`.`participantId`
        inner join (select tsc1.transferId, max(tsc1.transferStateChangeId) as maxTransferStateChangeId from `transferStateChange` as `tsc1` group by tsc1.transferId) as ts on
            `ts`.`transferId` = `transfer`.`transferId`
        inner join `transferStateChange` as `tsc` on
            `tsc`.`transferStateChangeId` = `ts`.`maxTransferStateChangeId`
        inner join `fxTransfer` as ft on
            ft.determiningTransferId = transfer.transferId
        inner join (select fxtsc1.commitRequestId, max(fxtsc1.fxTransferStateChangeId) as maxFxTransferStateChangeId from `fxTransferStateChange` as `fxtsc1` group by fxtsc1.commitRequestId) as fxts on
            `fxts`.`commitRequestId` = `ft`.`commitRequestId`
        inner join `fxTransferStateChange` as `fxtsc` on
            `fxtsc`.`fxTransferStateChangeId` = `fxts`.`maxFxTransferStateChangeId`
        inner join `fxTransferParticipant` as `ftp1` on
            `ftp1`.`commitRequestId` = `ft`.`commitRequestId` and `ftp1`.fxParticipantCurrencyTypeId  = 1
        inner join `transferParticipantRoleType` as `ftprt1` on
            `ftprt1`.`transferParticipantRoleTypeId` = `ftp1`.`transferParticipantRoleTypeId`
        inner join `participant` as `fda` on
            `fda`.`participantId` = `ftp1`.`participantId`
        inner join fxQuoteConversionTerms fqct on
        	fqct.conversionId = `ft`.`commitRequestId`
        inner join fxQuoteResponseConversionTerms fqrct on
        	fqrct.conversionId = `ft`.`commitRequestId`
        inner join quote q on
            q.transactionReferenceId = transfer.transferId
        inner join quoteParty qp1 on
            qp1.quoteId = q.quoteId and qp1.partyTypeId = tprt1.transferParticipantRoleTypeId
        inner join quoteParty qp2 on
            qp2.quoteId = q.quoteId and qp2.partyTypeId = tprt2.transferParticipantRoleTypeId
        inner join partyIdentifierType payerpit on
            payerpit.partyIdentifierTypeId = qp1.partyIdentifierTypeId
        inner join partyIdentifierType payeepit on
            payeepit.partyIdentifierTypeId = qp2.partyIdentifierTypeId
        inner join quoteResponse qr on
            qr.quoteId = q.quoteId
        left join fxCharge fxc on
            fxc.conversionId = fqrct.conversionId
        where
            `tprt1`.`name` = 'PAYER_DFSP'
            and `tprt2`.`name` = 'PAYEE_DFSP'
            and `ftprt1`.`name` = 'COUNTER_PARTY_FSP'
            and `transfer`.`transferId` = :transferId;
    - name: fxCharges
      query: >
        select DISTINCT fxc.fxChargeId, fxc.* from fxCharge
        join fxTransfer as ft on
          ft.determiningTransferId = :transferId
        join fxQuoteResponseConversionTerms fqrct on
        	fqrct.conversionId = ft.commitRequestId
        join fxCharge as fxc on
          fxc.conversionId = fqrct.conversionId
        where
          ft.determiningTransferId = :transferId
    - name: positionChanges
      query: >
        select
            `tsc`.`transferStateChangeId`,
            `tsc`.`transferStateId`,
            `tsc`.`createdDate` as `transferStateChangeDate`,
            `ppc`.value as positionChangeValue,
            pc.currencyId as positionChangeCurrency,
            p.name as positionChangeParticipantName,
            pc.createdDate as positionChangeDate,
            (select value from participantPositionChange ppc2 where ppc.participantPositionChangeId > ppc2.participantPositionChangeId and ppc.participantCurrencyId = ppc2.participantCurrencyId order by participantPositionChangeId desc limit 1) as previousPositionChangeValue
        from
            `transfer`
        inner join `transferStateChange` as `tsc` on
            `tsc`.`transferId` = `transfer`.`transferId`
        inner join participantPositionChange ppc ON
            `ppc`.transferStateChangeId = `tsc`.transferStateChangeId
        inner join participantCurrency pc on
          pc.participantCurrencyId = ppc.participantCurrencyId
        inner join participant p on
          p.participantId = pc.participantId
        where
           `transfer`.`transferId` = :transferId;
    - name: fxPositionChanges
      query: >
        select
            `fxtsc`.`fxTransferStateChangeId`,
            `fxtsc`.`transferStateId`,
            `fxtsc`.`createdDate` as `fxTransferStateChangeDate`,
            `ppc`.value as positionChangeValue,
            pc.currencyId as positionChangeCurrency,
            p.name as positionChangeParticipantName,
            pc.createdDate as positionChangeDate,
            (select value from participantPositionChange ppc2 where ppc.participantPositionChangeId > ppc2.participantPositionChangeId and ppc.participantCurrencyId = ppc2.participantCurrencyId order by participantPositionChangeId desc limit 1) as previousPositionChangeValue
        from
            `transfer`
        inner join `fxTransfer` as ft on
            ft.determiningTransferId = transfer.transferId
        inner join `fxTransferStateChange` as `fxtsc` on
            `fxtsc`.`commitRequestId` = `ft`.`commitRequestId`
        inner join participantPositionChange ppc ON
            `ppc`.fxTransferStateChangeId = `fxtsc`.fxTransferStateChangeId
        inner join participantCurrency pc on
          pc.participantCurrencyId = ppc.participantCurrencyId
        inner join participant p on
          p.participantId = pc.participantId
        where
           `transfer`.`transferId` = :transferId;
    - name: transferSettlementBatch
      query: >
        select
          ssw.settlementId as settlementBatchId
        from
          transferFulfilment
        inner join settlementWindow as sw on
          sw.settlementWindowId = transferFulfilment.settlementWindowId
        inner join settlementSettlementWindow as ssw on
          ssw.settlementWindowId = sw.settlementWindowId
        where
          transferFulfilment.transferId = :transferId
          and transferFulfilment.settlementWindowId is not null
    - name: conversionSettlementBatch
      query: >
        select
          ssw.settlementId as settlementBatchId
        from
          fxTransferFulfilment
        inner join settlementWindow as sw on
          sw.settlementWindowId = fxTransferFulfilment.settlementWindowId
        inner join settlementSettlementWindow as ssw on
          ssw.settlementWindowId = sw.settlementWindowId
        inner join `fxTransfer` as ft on
            ft.commitRequestId = fxTransferFulfilment.commitRequestId
        where
          ft.determiningTransferId = :transferId
          and fxTransferFulfilment.settlementWindowId is not null
  template: |
    <!DOCTYPE html>
    <html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>DRPP Transaction Detail Report</title>
        <style>
            body {
                font-family: 'Arial', sans-serif;
                background-color: #f5f5f5;
                margin: 0;
                padding: 20px;
                color: #333;
            }

            .container {
                max-width: 100%;
                margin: 0 auto;
                background-color: #fff;
                padding: 20px;
                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            }

            .grid-container {
                display: grid;
                grid-template-columns: repeat(2, 1fr);
                gap: 20px;
            }

            .grid-block {
                padding: 2px;
                border-radius: 8px;
            }

            .header {
                display: flex;
                justify-content: space-between;
                align-items: center;
                border-bottom: 2px solid #00447c;
                padding-bottom: 10px;
            }

            .header h1 {
                margin: 0;
                color: #00447c;
                font-size: 24px;
            }

            .header img {
                max-height: 50px;
            }

            .summary {
                margin-top: 20px;
                padding: 15px;
                background-color: #e9f3fa;
                border-left: 6px solid #00447c;
                border-radius: 5px;
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
                max-width: 500px;
            }

            .summary p {
                margin: 5px 0;
                font-weight: bold;
            }

            table {
                width: 100%;
                border-collapse: collapse;
                margin-top: 20px;
            }

            table, th, td {
                border: 1px solid #ddd;
            }

            th {
                background-color: #00447c;
                color: #fff;
                padding: 10px;
                font-size: 1.0em;
            }

            td {
                line-height: 1.6;
                padding: 10px;
                text-align: left;
                font-size: 0.9em;
            }

            tr:nth-child(even) {
                background-color: #f2f2f2;
            }

            .smallFont {
                font-size: 0.7em;
            }

            .thStyle {
                background-color: #00447c;
                color: #fff;
                padding: 10px;
                font-size: 1.0em;
            }

            .button-link {
                display: inline-block;
                padding: 10px 20px;
                font-size: 16px;
                color: #fff;
                background-color: #007bff;
                text-decoration: none;
                border-radius: 5px;
                transition: background-color 0.3s, transform 0.2s;
                font-weight: 500;
                box-shadow: 0 4px 8px rgba(0, 123, 255, 0.2);
            }

            .button-link:hover {
                background-color: #0056b3;
                transform: translateY(-2px);
                box-shadow: 0 6px 12px rgba(0, 86, 179, 0.3);
            }

            .button-link:active {
                transform: translateY(0);
                box-shadow: 0 4px 8px rgba(0, 86, 179, 0.2);
            }

            .highlight-link {
                color: #007bff;
                text-decoration: none;
                padding: 3px 5px;
                border-radius: 3px;
                transition: background-color 0.2s, color 0.2s;
            }

            .highlight-link:hover {
                background-color: #00447c;
                color: white;
            }

            .footer {
                margin-top: 20px;
                text-align: center;
                font-size: 0.9em;
                color: #666;
            }

            .footer p {
                margin: 5px 0;
            }
        </style>
    </head>

    <%
      const transferId = transfers[0]?.transferId;
      const submittedAt = transfers[0]?.createdDate.toUTCString();
      const sourceAmount = transfers[0]?.sourceAmount;
      const sourceCurrency = transfers[0]?.sourceCurrency;
      const targetAmount = transfers[0]?.targetAmount;
      const targetCurrency = transfers[0]?.targetCurrency;
      const transferState = transfers[0]?.transferState;
      const transferExpiry = transfers[0]?.transferExpiry.toUTCString();
      const conversionExpiry = transfers[0]?.conversionExpiry.toUTCString();
      const quoteId = transfers[0]?.quoteId;
      const transactionReferenceId = transfers[0]?.transactionReferenceId;
      const commitRequestId = transfers[0]?.commitRequestId;
      const conversionId = transfers[0]?.conversionId;

      const fxpName = transfers[0]?.fxpName;
      const fxTransferState = transfers[0]?.fxTransferState;

      const payerIdentifierValue = transfers[0]?.payerIdentifierValue;
      const payerIdentifierTypeName = transfers[0]?.payerIdentifierTypeName;
      const payerName = transfers[0]?.payerName;
      const payerProxyName = transfers[0]?.payerFsp;
      const payerFspName = transfers[0]?.endPayerFsp;

      const payeeIdentifierValue = transfers[0]?.payeeIdentifierValue;
      const payeeIdentifierTypeName = transfers[0]?.payeeIdentifierTypeName;
      const payeeName = transfers[0]?.payeeName;
      const payeeProxyName = transfers[0]?.payeeFsp;
      const payeeFspName = transfers[0]?.endPayeeFsp;
      const payeeFspFeeAmount = transfers[0]?.payeeFspFeeAmount;
      const payeeFspCommissionAmount = transfers[0]?.payeeFspCommissionAmount;

      const conversionTermsSourceAmount = transfers[0]?.conversionTermsSourceAmount;
      const conversionTermsTargetAmount = transfers[0]?.conversionTermsTargetAmount;

      const sourceAmountConversionCharges = fxCharges.reduce((n, {sourceAmount}) => n + sourceAmount, 0);
      const targetAmountConversionCharges = fxCharges.reduce((n, {targetAmount}) => n + targetAmount, 0);

      const exchangeRate = (sourceAmount - sourceAmountConversionCharges) / (targetAmount - targetAmountConversionCharges);

      const conversionSettlementBatchId = conversionSettlementBatch[0]?.settlementBatchId
      const transferSettlementBatchId = transferSettlementBatch[0]?.settlementBatchId;
    %>
    <body>
        <div class="container">
            <div class="header">
                <h1>DRPP Transaction Detail Report</h1>
                {{- if .Values.templates.topBarLogoUrl -}}
                <img src="{{ .Values.templates.topBarLogoUrl }}" alt="Logo">
                {{- end }}
            </div>

            <div class="summary">
                <p>For Regional Hub</p>
                <p>Transfer ID: <%= transferId %></p>
                <p>State: <%= transferState %></p>
            </div>
            <div>
              <br /><a class="highlight-link" href="report-transaction?format=html">View all Transactions</a>
            </div>
            <div class="grid-container">
                <div class="grid-block">
                    <table>
                      <tbody>
                        <tr>
                          <th>Transfer Description</th>
                        <tr>
                        <tr>
                          <td>
                            At <i><%=submittedAt%></i> <b><%=sourceAmount%> <%=sourceCurrency%></b> was transferred from <%=payerFspName%> to <%=payeeFspName%> who received <b><%=targetAmount%> <%=targetCurrency%></b>.
                            <br /><%=payerFspName%> <%= payerFspName!=payerProxyName ? `was represented by ${payerProxyName} who` : '' %> was debited by <%=sourceAmount%> <%=sourceCurrency%>.
                            <br /><%=payeeFspName%> <%= payeeFspName!=payeeProxyName ? `was represented by ${payeeProxyName} who` : '' %> was credited by <%=targetAmount%> <%=targetCurrency%>.
                            <br />Conversion was performed by <%=fxpName%>.
                          </td>
                        </tr>
                      </tbody>
                    </table>
                </div>
                <div class="grid-block">
                    <table>
                      <tbody>
                        <tr>
                          <th>Payer Details</th>
                        <tr>
                        <tr>
                          <td>
                            The Payer's identifier <%= payerIdentifierValue %> (<%= payerIdentifierTypeName %>), and their account is held at <%= payerFspName %>
                            allowing transactions in <%= sourceCurrency %>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                    <table>
                      <tbody>
                        <tr>
                          <th>Payee Details</th>
                        <tr>
                        <tr>
                          <td>
                            The Payee's identifier <%= payeeIdentifierValue %> (<%= payeeIdentifierTypeName %>), and their account is held at <%= payeeFspName %>
                            allowing transactions in <%= targetCurrency %>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                </div>
                <div class="grid-block">
                    <table>
                      <tbody>
                        <tr>
                          <th colspan='100%'>Transfer Terms</th>
                        <tr>
                        <tr>
                          <td>Transfer Amount</td>
                          <td>
                            <b><%=sourceAmount%> <%=sourceCurrency%>
                          </td>
                        </tr>
                        <tr>
                          <td>Payee Receive Amount</td>
                          <td>
                            <%=targetAmount%> <%=targetCurrency%>
                          </td>
                        </tr>
                        <tr>
                          <td>Payee DFSP Fee</td>
                          <td>
                            <%= payeeFspFeeAmount || 0 %> <%=targetCurrency%>
                          </td>
                        </tr>
                        <tr>
                          <td>Payee DFSP Commission</td>
                          <td>
                            <%= payeeFspCommissionAmount || 0 %> <%=targetCurrency%>
                          </td>
                        </tr>
                        <tr>
                          <td>Transfer Expiry</td>
                          <td>
                            <%= transferExpiry %>
                          </td>
                        </tr>
                        <tr>
                          <td>Transfer Settlement Batch</td>
                          <td>
                            <%= transferSettlementBatchId || 'Not yet settled' %>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                </div>
                <div class="grid-block">
                    <table>
                      <tbody>
                        <tr>
                          <th colspan='100%'>Currency Conversions Terms</th>
                        <tr>
                        <tr>
                          <td>Send Amount</td>
                          <td>
                            <%= parseFloat(conversionTermsSourceAmount).toFixed(2) %> <%= sourceCurrency %>
                          </td>
                        </tr>
                        <tr>
                          <td>Receive Amount</td>
                          <td>
                            <%= parseFloat(conversionTermsTargetAmount).toFixed(2) %> <%= targetCurrency %>
                          </td>
                        </tr>
                        <tr>
                          <td>Conversion Charge Amount</td>
                          <td>
                            <%= parseFloat(sourceAmountConversionCharges).toFixed(2) %> <%= sourceCurrency %>
                          </td>
                        </tr>
                        <tr>
                          <td>Conversion Charge Amount</td>
                          <td>
                            <%= parseFloat(targetAmountConversionCharges).toFixed(2) %> <%= targetCurrency %>
                          </td>
                        </tr>
                        <tr>
                          <td>Exchange Rate</td>
                          <td>
                            <%= parseFloat(exchangeRate).toFixed(4) %>
                            (<%= parseFloat(sourceAmount).toFixed(2) - parseFloat(sourceAmountConversionCharges).toFixed(2) %>/<%= parseFloat(targetAmount).toFixed(2) - parseFloat(targetAmountConversionCharges).toFixed(2) %>)
                          </td>
                        </tr>
                        <tr>
                          <td>Conversion Expiry</td>
                          <td>
                            <%= conversionExpiry %>
                          </td>
                        </tr>
                        <tr>
                          <td>Conversion Settlement Batch</td>
                          <td>
                            <%= conversionSettlementBatchId || 'Not yet settled' %>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                </div>
                <div class="grid-block">
                  <table cellpadding='0' cellspacing='0'>
                      <tbody>
                      <tr>
                        <th colspan='100%'>Technical Details</th>
                      </tr>
                      <tr>
                        <td>Transaction Id</td>
                        <td>
                          <%= transactionReferenceId %>
                        </td>
                      </tr>
                      <tr>
                        <td>Transfer Id</td>
                        <td>
                          <%= transferId %>
                        </td>
                      </tr>
                      <tr>
                        <td>Quote Id</td>
                        <td>
                          <%= quoteId %>
                        </td>
                      </tr>
                      <tr>
                        <td>Conversion Id</td>
                        <td>
                          <%= commitRequestId %>
                        </td>
                      </tr>
                      <tr>
                        <td>Conversion Quote Id</td>
                        <td>
                          <%= conversionId %>
                        </td>
                      </tr>
                      <tr>
                        <td>Conversion State</td>
                        <td>
                          <%= fxTransferState %>
                        </td>
                      </tr>
                  </table>
                </div>
                <div class="grid-block">
                  <table cellpadding='0' cellspacing='0'>
                      <tbody>
                      <tr>
                        <th colspan='100%'>Position Changes</th>
                      </tr>
                      <tr>
                        <th>Participant</th>
                        <th>Currency</th>
                        <th>Previous Position</th>
                        <th>New Position</th>
                        <th>Change</th>
                      </tr>
                      <% for(let pc of positionChanges) { %>
                      <tr>
                        <td><%= pc.positionChangeParticipantName %></td>
                        <td><%= pc.positionChangeCurrency %></td>
                        <td><%= pc.previousPositionChangeValue %></td>
                        <td><%= pc.positionChangeValue %></td>
                        <td><%= pc.positionChangeValue-pc.previousPositionChangeValue %></td>
                      </tr>
                      <% } %>
                      <% for(let fpc of fxPositionChanges) { %>
                      <tr>
                        <td><%= fpc.positionChangeParticipantName %></td>
                        <td><%= fpc.positionChangeCurrency %></td>
                        <td><%= fpc.previousPositionChangeValue %></td>
                        <td><%= fpc.positionChangeValue %></td>
                        <td><%= fpc.positionChangeValue-fpc.previousPositionChangeValue %></td>
                      </tr>
                      <% } %>
                  </table>
                </div>
            </div>


            <!--
            <pre>
            <code>
              <%= JSON.stringify(transfers, null, 2) %>
            </code>
            </pre>
            <pre>
            <code>
              fxCharges:
              <%= JSON.stringify(fxCharges, null, 2) %>

              positionChanges:
              <%= JSON.stringify(positionChanges, null, 2) %>

              fxPositionChanges:
              <%= JSON.stringify(fxPositionChanges, null, 2) %>

              transferSettlementBatch:
              <%= JSON.stringify(transferSettlementBatch, null, 2) %>

              conversionSettlementBatch:
              <%= JSON.stringify(conversionSettlementBatch, null, 2) %>
            </code>
            </pre>
            -->

            <div class="footer">
                <p>Generated on: <%= (new Date()).toUTCString() %></p>
            </div>
        </div>

    </body>
    </html>

{{- end }}
